#!/usr/bin/env python3
from glob import glob
import random
from subprocess import call
from os.path import isfile, isdir, join
from datetime import datetime


PATH = '/home/thomas/wallpapers'
LOG = '/home/thomas/wallpapers/last.txt'
TYPES = ['png', 'gif', 'jpe', 'jpeg', 'jpg']
MODE = '--bg-fill'


def print_help():
    print('Usage: changewall [--help] <category> <filename>')


def rand(category = '*'):
    ''' Select a random file from the given `category` '''
    files = []
    for t in TYPES:
        path = join(PATH, '{}/*.{}'.format(category, t))
        files.extend(glob(path))
    return random.choice(files)


def now_timestamp():
    ''' Get the utc timestamp for now in UTC format '''
    now = datetime.now()
    return now.strftime('%Y-%m-%dT%H:%M:%SZ%Z')


def log(choice):
    ''' Log the choice to the file `LOG` with a utc timestamp '''
    with open(LOG, 'a') as fout:
        fout.write(now_timestamp())
        fout.write(' ')
        fout.write(choice)
        fout.write('\n')


def feh(file):
    ''' Call `feh` with the `MODE` flag and `file` '''
    call(['feh', MODE, file])
    #print('Called feh with', MODE, 'and', file)


if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser(description='Change the desktop wallpaper using feh utility')
    parser.add_argument('filter', nargs='?', help='Select the category or category and filename. This is in the format category[/filename.ext] (default: random)')

    category = None
    file = None
    
    #args = parser.parse_args(['Landscapes/landscape_10.jpg'])
    args = parser.parse_args()
    if args.filter:
        path = args.filter.split('/')
        if len(path) > 2:
            parser.error('filter must be in the format category/filename or category')

        if not path[0] or not isdir(join(PATH, path[0])) or path[0] in ['.', '..', '*', '?']:
            parser.error('"{}" is not a valid category'.format(path[0]))
        category = path[0] 

        if len(path) > 1:
            if not path[1] or not isfile(join(PATH, category, path[1])):
                parser.error('{}/{} is not a valid file'.format(category, path[1]))
            file = join(PATH, category, path[1])
    else:
        category = '*'

    if not file:
        file = rand(category)

    log(file)
    feh(file)
