- name: Install neovim Archlinux
  become: true
  ansible.builtin.package:
    name: neovim
    state: present
  when: ansible_distribution == "Archlinux"

- name: Install neovim Ubuntu
  when: ansible_distribution == "Ubuntu"
  block:
    - name: Install apt dependencies
      become: true
      ansible.builtin.package:
        state: present
        name: lsb-release

    - name: Get DEB architecture
      ansible.builtin.command: dpkg --print-architecture
      register: deb_architecture
      changed_when: false

    - name: Get DEB release
      ansible.builtin.command: lsb_release -cs
      register: deb_release
      changed_when: false

    - name: Apt source
      become: true
      block:
        - name: Remove neovim source file
          ansible.builtin.file:
            state: absent
            path: "{{ neovim_source_path }}"

        - name: Add neovim source file
          ansible.builtin.lineinfile:
            line: >
              deb https://ppa.launchpadcontent.net/neovim-ppa/unstable/ubuntu/
              {{ deb_release.stdout }} main
            path: "{{ neovim_source_path }}"
            create: true
            owner: root
            group: root
            mode: "0644"

    - name: Update Apt Repositories
      become: true
      ansible.builtin.package:
        update_cache: true
      changed_when: false

    - name: Install neovim
      become: true
      ansible.builtin.package:
        state: latest
        name: neovim
      tags:
        - skip_ansible_lint

- name: Install Config
  ansible.builtin.git:
    repo: "{{ neovim_config_git_url }}"
    dest: "{{ neovim_config_path }}"
  tags:
    - user_config
    - skip_ansible_lint

- name: Override .vim
  ansible.builtin.file:
    src: "{{ neovim_config_path }}"
    dest: "{{ ansible_env.HOME }}/.vim"
    state: link
    mode: 0755
  tags:
    - user_config

- name: Override .vimrc
  ansible.builtin.file:
    src: "{{ neovim_config_path }}/init.vim"
    dest: "{{ ansible_env.HOME }}/.vimrc"
    state: link
    mode: 0755
  tags:
    - user_config

- name: Plugged Install
  ansible.builtin.command: "nvim +'PlugInstall --sync' +qa"
  args:
    creates: "{{ neovim_config_path }}/plugged"
  tags:
    - user_config

- name: CoC Install
  ansible.builtin.command: "nvim +'CocUpdate' +qa"
  args:
    creates: "{{ neovim_config_path }}/plugged/coc.nvim/node_modules/"
  tags:
    - user_config
