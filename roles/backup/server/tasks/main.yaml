- name: Install Restic
  become: true
  ansible.builtin.package:
    state: present
    name: restic

- name: Install fuse Arch
  become: true
  ansible.builtin.package:
    state: present
    name: fuse2
  when: ansible_distribution == "Archlinux"

- name: Install fuse Ubuntu
  become: true
  ansible.builtin.package:
    state: present
    name: libfuse2
  when: ansible_distribution == "Ubuntu"

- name: Create Restic User
  become: true
  ansible.builtin.user:
    name: "{{ restic_user }}"
    password_lock: true
    state: present
    shell: /bin/sh
  register: ru

- name: Add restic user to raid group
  become: true
  ansible.builtin.user:
    name: "{{ restic_user }}"
    groups: "{{ raid_user }}"
    append: true

- name: Add user to restic group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: "{{ restic_user }}"
    append: true

- name: Copy timer files
  become: true
  ansible.builtin.copy:
    src: clean_backups.timer
    dest: /usr/lib/systemd/system/clean_backups.timer
    mode: "0644"

- name: Copy service files
  become: true
  ansible.builtin.template:
    src: clean_backups.service.j2
    dest: /usr/lib/systemd/system/clean_backups.service
    mode: "0644"

- name: Copy clean_backups script
  become: true
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ ru.home }}"
    owner: "{{ restic_user }}"
    group: "{{ restic_user }}"
    mode: "0755"
  loop:
    - clean_backups
    - clean_host_backups

- name: Write restic password to file
  become: true
  ansible.builtin.copy:
    dest: "{{ ru.home }}/.restic_pass"
    content: "{{ restic_password | mandatory }}"
    owner: "{{ restic_user }}"
    group: "{{ restic_user }}"
    mode: "0400"

- name: Stat raid mount
  ansible.builtin.stat:
    path: /data
  register: st

- name: Fail if the /data dir does not exist
  ansible.builtin.fail:
    msg: "RAID mount must first be created at /data"
  when: not st.stat.exists

- name: Create backups dir
  become: true
  ansible.builtin.file:
    path: /data/restic
    state: directory
    owner: "{{ restic_user }}"
    group: "{{ restic_user }}"
    mode: "0750"

- name: Init restic repo
  become: true
  ansible.builtin.command: >
    restic -v
      --password-file {{ ru.home }}/.restic_pass
      --repo /data/restic
      init
  args:
    creates: /data/restic/config
  tags:
    - init_restic
    - never

- name: Chown backups dir to restic user
  become: true
  ansible.builtin.file:
    path: /data/restic
    state: directory
    recurse: true
    owner: "{{ restic_user }}"
    group: "{{ restic_user }}"

- name: Enable clean_backups timer
  become: true
  ansible.builtin.systemd:
    name: clean_backups.timer
    daemon_reload: true
    enabled: false

- name: Add backup client to restic account
  become: true
  when: restic_public_key is defined
  ansible.posix.authorized_key:
    user: "{{ restic_user }}"
    state: present
    key: "{{ restic_public_key | mandatory }}"
  tags:
    - user_config
