#!/bin/bash

# Exit on failure with status code of failed command
set -e

if [ -z "$HOSTNAME" ]; then
    echo "environment variable HOSTNAME is empty, cannot continue"
    exit 1
fi

[ -z "$BACKUPS_HOST" ] && BACKUPS_HOST="tom-lan"
[ -z "$BACKUPS_USER" ] && BACKUPS_USER="restic"
[ -z "$BACKUPS_PATH" ] && BACKUPS_PATH="/data/restic"
[ -z "$BACKUPS_EXCLUDE_PATH" ] && BACKUPS_EXCLUDE_PATH="$HOME/.restic_exclude"
[ -z "$BACKUPS_PASSWORD_PATH" ] && BACKUPS_PASSWORD_PATH="$HOME/.restic_pass"
[ -z "$BACKUPS_TAGS" ] && BACKUPS_TAGS="auto,home"

START_SECONDS=$SECONDS

GREEN="\e[0;32m"
YELLOW="\e[0;33m"
CYAN="\e[0;36m"
WHITE="\e[1;97m"
RESET="\e[0;0m"

echo -e "${CYAN}:: ${WHITE}Backing up" \
    "${YELLOW}$HOSTNAME${WHITE}:${GREEN}$HOME${WHITE}" \
    "to ${YELLOW}$BACKUPS_USER${WHITE}@${YELLOW}$BACKUPS_HOST${WHITE}:${GREEN}$BACKUPS_PATH${RESET}"

notify-send -u low -t 30000 "Backup has started..."

restic -v \
    -p "$BACKUPS_PASSWORD_PATH" \
    -r "sftp:$BACKUPS_USER@$BACKUPS_HOST:$BACKUPS_PATH" \
    backup \
    --exclude-file "$BACKUPS_EXCLUDE_PATH" \
    "$HOME" \
    --tag "$BACKUPS_TAGS"

echo -e "${CYAN}:: ${WHITE}Finished in $((SECONDS - START_SECONDS))s!${RESET}"

notify-send -u low "Backup has finished!"
